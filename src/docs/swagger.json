{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Multi-Tenant service",
        "title": "Multi-Tenant API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "multi-tenant-api.onrender.com",
    "basePath": "/api/v1",
    "paths": {
        "/auditLog/transaction/{id}": {
            "get": {
                "description": "this endpoint gets all audit logs by the transaction ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit-log"
                ],
                "summary": "getAllAuditLogsByTransactionID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort_direction_desc",
                        "name": "sort_direction_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audit logs fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/auditLog/{id}": {
            "get": {
                "description": "this endpoint gets an audit log by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit-log"
                ],
                "summary": "getAuditLogByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "audit id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audit log fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "this endpoint is used to log a user in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login request body",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "this endpoint signs up a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user signup",
                "parameters": [
                    {
                        "description": "signup request body",
                        "name": "signupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.signupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "signup successful",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "patch": {
                "description": "this endpoint is used to update any of the users record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "updateUserByID",
                "parameters": [
                    {
                        "description": "update user request body",
                        "name": "updateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "user updated successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/auth/user/{id}": {
            "get": {
                "description": "this endpoint gets a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "getUserByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "get": {
                "description": "this endpoint is used to get all transactions belonging to a particular user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "getTransactionsByUserID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort_direction_desc",
                        "name": "sort_direction_desc",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transactions fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/transaction/flow": {
            "get": {
                "description": "this endpoint is used to get all transactions belonging to a particular user based on the flow of transaction flow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "getAllTransactionsByFlow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort_by",
                        "name": "sort_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort_direction_desc",
                        "name": "sort_direction_desc",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "flow",
                        "name": "flow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transactions fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/transaction/{id}": {
            "get": {
                "description": "this endpoint gets a transaction by it ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "getTransactionByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transactionID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        },
        "/wallet": {
            "get": {
                "description": "this endpoint gets gets a users wallet balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "getWalletByUserID",
                "responses": {
                    "200": {
                        "description": "wallet balance fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/model.GenericResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.loginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.signupRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.updateUserRequest": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "model.GenericResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The http response code\n\nRequired: true\nExample: 200",
                    "type": "integer"
                },
                "data": {
                    "description": "The http response data in cases where the request was processed successfully (optional)\n\nExample: {\"id\": \"uuid\", \"name\": \"john doe\"}"
                },
                "error": {
                    "description": "The error message (optional)\n\nExample: cannot process this request at this time (optional)",
                    "type": "string"
                },
                "message": {
                    "description": "The success message (optional)\n\nExample: User has been created successfully (optional)",
                    "type": "string"
                },
                "page": {
                    "description": "Page is the pagination info"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}