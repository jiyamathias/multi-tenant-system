basePath: /api/v1
definitions:
  auth.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.signupRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  auth.updateUserRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  model.GenericResponse:
    properties:
      code:
        description: |-
          The http response code

          Required: true
          Example: 200
        type: integer
      data:
        description: |-
          The http response data in cases where the request was processed successfully (optional)

          Example: {"id": "uuid", "name": "john doe"}
      error:
        description: |-
          The error message (optional)

          Example: cannot process this request at this time (optional)
        type: string
      message:
        description: |-
          The success message (optional)

          Example: User has been created successfully (optional)
        type: string
      page:
        description: Page is the pagination info
    type: object
  payment.bankTransferRequest:
    properties:
      bankNumber:
        type: string
      fullName:
        type: string
    required:
    - bankNumber
    - fullName
    type: object
  payment.depositRequest:
    properties:
      amount:
        type: number
    required:
    - amount
    type: object
  payment.makeTransferRequest:
    properties:
      accountNumber:
        type: string
      amount:
        type: number
      bankNumber:
        type: string
    required:
    - accountNumber
    - amount
    - bankNumber
    type: object
  tenant.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  tenant.tenantRequest:
    properties:
      businessName:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - businessName
    - email
    - password
    type: object
host: localhost:5002
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API for the Multi-Tenant service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Multi-Tenant API
  version: "1.0"
paths:
  /auditLog/{id}:
    get:
      consumes:
      - application/json
      description: this endpoint gets an audit log by ID
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: audit id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: audit log fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getAuditLogByID
      tags:
      - audit-log
  /auditLog/transaction/{id}:
    get:
      consumes:
      - application/json
      description: this endpoint gets all audit logs by the transaction ID
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: transaction id
        in: path
        name: id
        type: string
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      - description: sort_by
        in: query
        name: sort_by
        type: string
      - description: sort_direction_desc
        in: query
        name: sort_direction_desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: audit logs fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getAllAuditLogsByTransactionID
      tags:
      - audit-log
  /auth/login:
    post:
      consumes:
      - application/json
      description: this endpoint is used to log a user in
      parameters:
      - description: login request body
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user logged in successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: login
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: this endpoint signs up a new user
      parameters:
      - description: Bearer <token>. Pass in the tenant access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: signup request body
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/auth.signupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: signup successful
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: user signup
      tags:
      - auth
  /auth/user:
    patch:
      consumes:
      - application/json
      description: this endpoint is used to update any of the users record
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: update user request body
        in: body
        name: updateUserRequest
        required: true
        schema:
          $ref: '#/definitions/auth.updateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: user updated successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: updateUserByID
      tags:
      - auth
  /auth/user/{id}:
    get:
      consumes:
      - application/json
      description: this endpoint gets a user by ID
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: userID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: user details fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getUserByID
      tags:
      - auth
  /payment/bank-transfer:
    post:
      consumes:
      - application/json
      description: this endpoint is used to get a one time virtual account that is
        to be used top up once wallet
      parameters:
      - description: bank transfer request body
        in: body
        name: bankTransferRequest
        required: true
        schema:
          $ref: '#/definitions/payment.bankTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: bank account created successful
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: bankTransfer
      tags:
      - payment
  /payment/deposit:
    post:
      consumes:
      - application/json
      description: this endpoint is used to make a deposit
      parameters:
      - description: deposit request body
        in: body
        name: depositRequest
        required: true
        schema:
          $ref: '#/definitions/payment.depositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: wallet top up successful
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: makeDeposit
      tags:
      - payment
  /payment/transfer:
    post:
      consumes:
      - application/json
      description: this endpoint is used to make transfer
      parameters:
      - description: make transfer request body
        in: body
        name: makeTransferRequest
        required: true
        schema:
          $ref: '#/definitions/payment.makeTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: transfer successful
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: makeTransfer
      tags:
      - payment
  /tenant:
    get:
      consumes:
      - application/json
      description: this endpoint gets all users under a tenant
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      - description: sort_by
        in: query
        name: sort_by
        type: string
      - description: sort_direction_desc
        in: query
        name: sort_direction_desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: audit log fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getAllUsersByTenantID
      tags:
      - tenant
    post:
      consumes:
      - application/json
      description: this endpoint create a new tenent
      parameters:
      - description: tenant request body
        in: body
        name: tenantRequest
        required: true
        schema:
          $ref: '#/definitions/tenant.tenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: tenant created successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: createTenant
      tags:
      - tenant
  /tenant/login:
    post:
      consumes:
      - application/json
      description: this endpoint is used to log a user in
      parameters:
      - description: login request body
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/tenant.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: tenant logged in successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: login
      tags:
      - auth
  /transaction:
    get:
      consumes:
      - application/json
      description: this endpoint is used to get all transactions belonging to a particular
        user
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      - description: sort_by
        in: query
        name: sort_by
        required: true
        type: string
      - description: sort_direction_desc
        in: query
        name: sort_direction_desc
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: transactions fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getTransactionsByUserID
      tags:
      - transaction
  /transaction/{id}:
    get:
      consumes:
      - application/json
      description: this endpoint gets a transaction by it ID
      parameters:
      - description: transactionID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: transaction details fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getTransactionByID
      tags:
      - transaction
  /transaction/flow:
    get:
      consumes:
      - application/json
      description: this endpoint is used to get all transactions belonging to a particular
        user based on the flow of transaction flow
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: size
        in: query
        name: size
        type: string
      - description: sort_by
        in: query
        name: sort_by
        required: true
        type: string
      - description: sort_direction_desc
        in: query
        name: sort_direction_desc
        required: true
        type: string
      - description: flow
        in: query
        name: flow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: transactions fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getAllTransactionsByFlow
      tags:
      - transaction
  /wallet:
    get:
      consumes:
      - application/json
      description: this endpoint gets gets a users wallet balance
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: wallet balance fetched successfully
          schema:
            $ref: '#/definitions/model.GenericResponse'
      summary: getWalletByUserID
      tags:
      - wallet
schemes:
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
