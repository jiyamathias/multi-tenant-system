version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: codematic_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: docker
      PGDATA: /pgdata
    volumes:
      - ./postgres/pgdata:/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: codematic_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  codematic_backend:
    env_file:
      - ./src/dev.env
    build:
      context: .
      args:
        app_env: ${APP_ENV}
    volumes:
      - .:/go/src/codematic
    ports:
      - "5002:5002"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  redis:
    build: ./redis
    ports:
      - "6313:6313"
